// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Texere.DataAccess;

namespace Texere.DataAccess.Migrations
{
    [DbContext(typeof(TexereDbContext))]
    [Migration("20201015030801_agregarEstados")]
    partial class agregarEstados
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Texere.Model.Accesorios", b =>
                {
                    b.Property<int>("AccesorioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescAccesorio")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool>("TieneTalle")
                        .HasColumnType("bit");

                    b.HasKey("AccesorioId");

                    b.ToTable("Accesorios");

                    b.HasData(
                        new
                        {
                            AccesorioId = 1,
                            DescAccesorio = "Cuello",
                            TieneTalle = true
                        },
                        new
                        {
                            AccesorioId = 2,
                            DescAccesorio = "Puño",
                            TieneTalle = false
                        },
                        new
                        {
                            AccesorioId = 3,
                            DescAccesorio = "Cintura",
                            TieneTalle = false
                        });
                });

            modelBuilder.Entity("Texere.Model.Clientes", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DniCuit")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("Domicilio")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("NombreApellido")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("ClienteId");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            ClienteId = 1,
                            DniCuit = "111111",
                            Domicilio = "Mitre 587",
                            Email = "nortiz@gmail.com",
                            NombreApellido = "Nazareno Ortiz",
                            Telefono = "48756632"
                        },
                        new
                        {
                            ClienteId = 2,
                            DniCuit = "222222",
                            Domicilio = "Corrientes 2150",
                            Email = "aolivo@gmail.com",
                            NombreApellido = "Adrián Olivo",
                            Telefono = "43215874"
                        },
                        new
                        {
                            ClienteId = 3,
                            DniCuit = "333333",
                            Domicilio = "Pellegrini 1243",
                            Email = "mjuarez@gmail.com",
                            NombreApellido = "Melina Juarez",
                            Telefono = "43658740"
                        });
                });

            modelBuilder.Entity("Texere.Model.Colores", b =>
                {
                    b.Property<int>("ColorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("ColorId");

                    b.ToTable("Colores");

                    b.HasData(
                        new
                        {
                            ColorId = 1,
                            Descripcion = "Blanco"
                        },
                        new
                        {
                            ColorId = 2,
                            Descripcion = "Verde Benetton"
                        },
                        new
                        {
                            ColorId = 3,
                            Descripcion = "Rojo Sangre"
                        },
                        new
                        {
                            ColorId = 4,
                            Descripcion = "Azul Marino"
                        },
                        new
                        {
                            ColorId = 5,
                            Descripcion = "Azul Marino Claro"
                        },
                        new
                        {
                            ColorId = 6,
                            Descripcion = "Blanco Óptico"
                        },
                        new
                        {
                            ColorId = 7,
                            Descripcion = "Verde Inglés"
                        },
                        new
                        {
                            ColorId = 8,
                            Descripcion = "Verde Oliva"
                        },
                        new
                        {
                            ColorId = 9,
                            Descripcion = "Negro"
                        },
                        new
                        {
                            ColorId = 10,
                            Descripcion = "Amarillo"
                        },
                        new
                        {
                            ColorId = 11,
                            Descripcion = "Naranja"
                        },
                        new
                        {
                            ColorId = 12,
                            Descripcion = "Gris Melange"
                        },
                        new
                        {
                            ColorId = 13,
                            Descripcion = "Gris Claro"
                        });
                });

            modelBuilder.Entity("Texere.Model.ColoresModelos", b =>
                {
                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<int>("ModeloId")
                        .HasColumnType("int");

                    b.HasKey("ColorId", "ModeloId");

                    b.HasIndex("ModeloId");

                    b.ToTable("ColoresModelos");
                });

            modelBuilder.Entity("Texere.Model.Estados", b =>
                {
                    b.Property<int>("EstadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EstadoId");

                    b.ToTable("Estados");

                    b.HasData(
                        new
                        {
                            EstadoId = 1,
                            Descripcion = "Pendiente"
                        },
                        new
                        {
                            EstadoId = 2,
                            Descripcion = "En Curso"
                        },
                        new
                        {
                            EstadoId = 3,
                            Descripcion = "Finalizado"
                        },
                        new
                        {
                            EstadoId = 4,
                            Descripcion = "Cancelado"
                        });
                });

            modelBuilder.Entity("Texere.Model.Instituciones", b =>
                {
                    b.Property<int>("InstitucionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<int?>("ModeloId")
                        .HasColumnType("int");

                    b.HasKey("InstitucionId");

                    b.HasIndex("ModeloId");

                    b.ToTable("Instituciones");

                    b.HasData(
                        new
                        {
                            InstitucionId = 1,
                            Descripcion = "Colegio Adoratrices"
                        },
                        new
                        {
                            InstitucionId = 2,
                            Descripcion = "Colegio Adventista"
                        },
                        new
                        {
                            InstitucionId = 3,
                            Descripcion = "Colegio Alvear"
                        },
                        new
                        {
                            InstitucionId = 4,
                            Descripcion = "Colegio Arrayanes"
                        },
                        new
                        {
                            InstitucionId = 5,
                            Descripcion = "Colegio Asunción"
                        },
                        new
                        {
                            InstitucionId = 6,
                            Descripcion = "Colegio Boneo"
                        },
                        new
                        {
                            InstitucionId = 7,
                            Descripcion = "Colegio Brigadier López"
                        },
                        new
                        {
                            InstitucionId = 8,
                            Descripcion = "Colegio Buen Samaritano"
                        },
                        new
                        {
                            InstitucionId = 9,
                            Descripcion = "Colegio Cayetano Errico"
                        },
                        new
                        {
                            InstitucionId = 10,
                            Descripcion = "Colegio Comercio"
                        },
                        new
                        {
                            InstitucionId = 11,
                            Descripcion = "Colegio Complejo Alberdi"
                        },
                        new
                        {
                            InstitucionId = 12,
                            Descripcion = "Colegio Cooperación"
                        },
                        new
                        {
                            InstitucionId = 13,
                            Descripcion = "Colegio Cristo Rey"
                        },
                        new
                        {
                            InstitucionId = 14,
                            Descripcion = "Colegio Dante Alighieri"
                        },
                        new
                        {
                            InstitucionId = 15,
                            Descripcion = "Colegio Del Sur"
                        },
                        new
                        {
                            InstitucionId = 16,
                            Descripcion = "Colegio Divino Maestro"
                        },
                        new
                        {
                            InstitucionId = 17,
                            Descripcion = "Colegio Edmondo"
                        },
                        new
                        {
                            InstitucionId = 18,
                            Descripcion = "Colegio El Huerto"
                        },
                        new
                        {
                            InstitucionId = 19,
                            Descripcion = "Colegio Español"
                        },
                        new
                        {
                            InstitucionId = 20,
                            Descripcion = "Colegio Fuente De Vida"
                        },
                        new
                        {
                            InstitucionId = 21,
                            Descripcion = "Colegio Gianelli"
                        },
                        new
                        {
                            InstitucionId = 22,
                            Descripcion = "Colegio Gomara"
                        },
                        new
                        {
                            InstitucionId = 23,
                            Descripcion = "Colegio Grognet"
                        },
                        new
                        {
                            InstitucionId = 24,
                            Descripcion = "Colegio Guadalupe"
                        },
                        new
                        {
                            InstitucionId = 25,
                            Descripcion = "Colegio Instituto Sur"
                        },
                        new
                        {
                            InstitucionId = 26,
                            Descripcion = "Colegio Latino"
                        },
                        new
                        {
                            InstitucionId = 27,
                            Descripcion = "Colegio La Guardia"
                        },
                        new
                        {
                            InstitucionId = 28,
                            Descripcion = "Colegio La Merced"
                        },
                        new
                        {
                            InstitucionId = 29,
                            Descripcion = "Colegio La Salle"
                        },
                        new
                        {
                            InstitucionId = 30,
                            Descripcion = "Colegio Leloir"
                        },
                        new
                        {
                            InstitucionId = 31,
                            Descripcion = "Colegio López"
                        },
                        new
                        {
                            InstitucionId = 32,
                            Descripcion = "Colegio Los Ángeles"
                        },
                        new
                        {
                            InstitucionId = 33,
                            Descripcion = "Colegio Los Arroyos"
                        },
                        new
                        {
                            InstitucionId = 34,
                            Descripcion = "Colegio Luján"
                        },
                        new
                        {
                            InstitucionId = 35,
                            Descripcion = "Colegio Madre Cabrini"
                        },
                        new
                        {
                            InstitucionId = 36,
                            Descripcion = "Colegio Manantiales"
                        },
                        new
                        {
                            InstitucionId = 37,
                            Descripcion = "Colegio María Madre"
                        },
                        new
                        {
                            InstitucionId = 38,
                            Descripcion = "Colegio Maristas"
                        },
                        new
                        {
                            InstitucionId = 39,
                            Descripcion = "Colegio Mater Dei"
                        },
                        new
                        {
                            InstitucionId = 40,
                            Descripcion = "Colegio Mirasoles"
                        },
                        new
                        {
                            InstitucionId = 41,
                            Descripcion = "Colegio Misericordia"
                        },
                        new
                        {
                            InstitucionId = 42,
                            Descripcion = "Colegio Natividad"
                        },
                        new
                        {
                            InstitucionId = 43,
                            Descripcion = "Colegio Niño Jesús"
                        },
                        new
                        {
                            InstitucionId = 44,
                            Descripcion = "Colegio Normal"
                        },
                        new
                        {
                            InstitucionId = 45,
                            Descripcion = "Colegio Nuestra Sra. De La Paz"
                        },
                        new
                        {
                            InstitucionId = 46,
                            Descripcion = "Colegio Padre Claret"
                        },
                        new
                        {
                            InstitucionId = 47,
                            Descripcion = "Colegio Pompeya"
                        },
                        new
                        {
                            InstitucionId = 48,
                            Descripcion = "Colegio Prefectura"
                        },
                        new
                        {
                            InstitucionId = 49,
                            Descripcion = "Colegio Sabin"
                        },
                        new
                        {
                            InstitucionId = 50,
                            Descripcion = "Colegio Sagrada Familia"
                        },
                        new
                        {
                            InstitucionId = 51,
                            Descripcion = "Colegio Sagrado Corazón"
                        },
                        new
                        {
                            InstitucionId = 52,
                            Descripcion = "Colegio San Francisco De Asís"
                        },
                        new
                        {
                            InstitucionId = 53,
                            Descripcion = "Colegio San Jorge"
                        },
                        new
                        {
                            InstitucionId = 54,
                            Descripcion = "Colegio San Martín"
                        },
                        new
                        {
                            InstitucionId = 55,
                            Descripcion = "Colegio San Pablo"
                        },
                        new
                        {
                            InstitucionId = 56,
                            Descripcion = "Colegio San Patricio"
                        },
                        new
                        {
                            InstitucionId = 57,
                            Descripcion = "Colegio San Ramón"
                        },
                        new
                        {
                            InstitucionId = 58,
                            Descripcion = "Colegio Santa Teresita"
                        },
                        new
                        {
                            InstitucionId = 59,
                            Descripcion = "Colegio Santísimo Rosario"
                        },
                        new
                        {
                            InstitucionId = 60,
                            Descripcion = "Colegio Teodelina"
                        },
                        new
                        {
                            InstitucionId = 61,
                            Descripcion = "Colegio Urquiza"
                        },
                        new
                        {
                            InstitucionId = 62,
                            Descripcion = "Colegio Verbo Encarnado"
                        });
                });

            modelBuilder.Entity("Texere.Model.LineasPedido", b =>
                {
                    b.Property<int>("LineaPedidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccesorioId")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<int>("ModeloId")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("PedidoId")
                        .HasColumnType("int");

                    b.Property<int?>("TalleId")
                        .HasColumnType("int");

                    b.HasKey("LineaPedidoId");

                    b.HasIndex("AccesorioId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("ModeloId");

                    b.HasIndex("PedidoId");

                    b.HasIndex("TalleId");

                    b.ToTable("LineasPedido");
                });

            modelBuilder.Entity("Texere.Model.Materiales", b =>
                {
                    b.Property<int>("MaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescMaterial")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("MaterialId");

                    b.ToTable("Materiales");

                    b.HasData(
                        new
                        {
                            MaterialId = 1,
                            DescMaterial = "Algodón"
                        },
                        new
                        {
                            MaterialId = 2,
                            DescMaterial = "Poliéster"
                        },
                        new
                        {
                            MaterialId = 3,
                            DescMaterial = "Acrílico"
                        });
                });

            modelBuilder.Entity("Texere.Model.Modelos", b =>
                {
                    b.Property<int>("ModeloId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescModelo")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("ModeloId");

                    b.ToTable("Modelos");
                });

            modelBuilder.Entity("Texere.Model.Pedidos", b =>
                {
                    b.Property<int>("PedidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.HasKey("PedidoId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EstadoId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("Texere.Model.PrecioAccesorio", b =>
                {
                    b.Property<int>("PrecioAccesorioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccesorioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaVigencia")
                        .HasColumnType("datetime2");

                    b.Property<float>("Valor")
                        .HasColumnType("real");

                    b.HasKey("PrecioAccesorioId");

                    b.HasIndex("AccesorioId");

                    b.ToTable("PrecioAccesorio");
                });

            modelBuilder.Entity("Texere.Model.Talles", b =>
                {
                    b.Property<int>("TalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescTalle")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("Medida")
                        .HasColumnType("int");

                    b.HasKey("TalleId");

                    b.ToTable("Talles");

                    b.HasData(
                        new
                        {
                            TalleId = 1,
                            DescTalle = "Talle 8",
                            Medida = 28
                        },
                        new
                        {
                            TalleId = 2,
                            DescTalle = "Talle 10",
                            Medida = 30
                        },
                        new
                        {
                            TalleId = 3,
                            DescTalle = "Talle 12",
                            Medida = 32
                        },
                        new
                        {
                            TalleId = 4,
                            DescTalle = "Talle 14",
                            Medida = 34
                        },
                        new
                        {
                            TalleId = 5,
                            DescTalle = "Talle 16 (XS)",
                            Medida = 36
                        },
                        new
                        {
                            TalleId = 6,
                            DescTalle = "Talle S",
                            Medida = 38
                        },
                        new
                        {
                            TalleId = 7,
                            DescTalle = "Talle M",
                            Medida = 40
                        },
                        new
                        {
                            TalleId = 8,
                            DescTalle = "Talle L",
                            Medida = 42
                        },
                        new
                        {
                            TalleId = 9,
                            DescTalle = "Talle XL",
                            Medida = 44
                        },
                        new
                        {
                            TalleId = 10,
                            DescTalle = "Talle XXL",
                            Medida = 46
                        });
                });

            modelBuilder.Entity("Texere.Model.ColoresModelos", b =>
                {
                    b.HasOne("Texere.Model.Colores", "Colores")
                        .WithMany("ColoresModelos")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Texere.Model.Modelos", "Modelos")
                        .WithMany("ColoresModelos")
                        .HasForeignKey("ModeloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Texere.Model.Instituciones", b =>
                {
                    b.HasOne("Texere.Model.Modelos", "Modelo")
                        .WithMany("Instituciones")
                        .HasForeignKey("ModeloId");
                });

            modelBuilder.Entity("Texere.Model.LineasPedido", b =>
                {
                    b.HasOne("Texere.Model.Accesorios", "Accesorio")
                        .WithMany("LineasPedido")
                        .HasForeignKey("AccesorioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Texere.Model.Estados", "Estado")
                        .WithMany("LineasPedido")
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Texere.Model.Materiales", "Material")
                        .WithMany("LineasPedido")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Texere.Model.Modelos", "Modelo")
                        .WithMany("LineasPedido")
                        .HasForeignKey("ModeloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Texere.Model.Pedidos", "Pedido")
                        .WithMany("LineasPedido")
                        .HasForeignKey("PedidoId");

                    b.HasOne("Texere.Model.Talles", "Talle")
                        .WithMany("LineasPedido")
                        .HasForeignKey("TalleId");
                });

            modelBuilder.Entity("Texere.Model.Pedidos", b =>
                {
                    b.HasOne("Texere.Model.Clientes", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Texere.Model.Estados", "Estado")
                        .WithMany("Pedidos")
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Texere.Model.PrecioAccesorio", b =>
                {
                    b.HasOne("Texere.Model.Accesorios", "Accesorio")
                        .WithMany("HistoricoPrecio")
                        .HasForeignKey("AccesorioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
